name: Build and Deploy Spring Boot App

on:
  push:
    branches:
      - main
      - staging

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build JAR with Maven
      run: mvn clean install

    - name: Build Docker Image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/springboot-app .

    - name: Login to DockerHub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/springboot-app

  deploy:
    if: false # Disabled - EC2 instances destroyed
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: SSH into EC2 and Deploy
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/springboot-app
          docker stop springboot-app || true
          docker rm springboot-app || true
          docker run -d -p 8484:8484 --name springboot-app ${{ secrets.DOCKER_USERNAME }}/springboot-app

  deploy-staging:
    if: false # Disabled - EC2 instances destroyed
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: SSH into Staging EC2 and Deploy
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST_STAGING }}
        username: ec2-user
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/springboot-app
          docker stop springboot-app || true
          docker rm springboot-app || true
          docker run -d -p 8484:8484 --name springboot-app ${{ secrets.DOCKER_USERNAME }}/springboot-app
